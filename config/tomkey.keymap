#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        winalts: winalts {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN &kp LEFT_ALT &kp S>;
            label = "WINALTS";
        };

        section4: section4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HASH &kp HASH &kp HASH &kp HASH>;
            label = "SECTION4";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E             &kp R           &kp T                                                 &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D             &kp F           &kp G        &mo 6                 &kp BACKSLASH      &kp H            &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &kp C             &kp V           &kp B        &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp N            &kp M  &kp COMMA  &kp DOT  &lt 2 SLASH
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &lt 4 SPACE  &kp SPACE             &kp ENTER          &lt 3 BACKSPACE                             &lt 5 ESCAPE
            >;
        };

        MOUSE {
            bindings = <
&trans     &trans        &trans            &trans          &trans                      &trans  &trans    &trans    &trans    &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans     &trans        &trans            &trans          &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &trans  &trans      &trans  &mo 3                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp F12     &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp GRAVE     &kp LC(LS(TAB))         &kp LG(RIGHT)   &kp LANGUAGE_1           &kp LANGUAGE_2                              &trans   &kp RC(LEFT_ARROW)  &kp UP_ARROW      &kp RC(RIGHT_ARROW)  &kp LG(P)
&kp TAB       &kp LA(LG(LEFT_ARROW))  &kp LG(LEFT)    &kp LG(LA(RIGHT_ARROW))  &kp LEFT_BRACKET   &trans      &trans       &trans   &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &kp LG(K)
&kp LCMD      &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp RIGHT_BRACKET  &trans      &kp LS(TAB)  &kp TAB  &trans              &kp LC(UP_ARROW)  &trans               &kp LG(L)
&kp LEFT_ALT  &trans                  &kp LEFT_SHIFT  &trans                   &trans             &trans      &trans       &trans                                                              &trans
            >;
        };

        NUM {
            bindings = <
&kp GRAVE                   &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp PLUS                                          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS      &kp SEMICOLON
&kp SLASH                   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp AMPS            &kp QUESTION    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH     &kp SQT
&mt LEFT_SHIFT KP_NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp LANGUAGE_1      &kp LANGUAGE_2  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK  &kp EQUAL
&trans                      &trans        &trans        &trans        &trans        &trans              &trans          &kp NUMBER_0                                            &kp UNDERSCORE
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        layer_6 {
            bindings = <
&kp LG(Q)      &kp LC(W)  &trans     &trans     &section4                      &bt BT_PRV  &bt BT_NXT  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LG(LS(Z))  &trans     &kp LC(C)  &trans     &winalts   &trans      &trans  &bt BT_CLR  &trans      &trans        &trans        &trans
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)  &trans     &trans      &trans  &trans      &trans      &trans        &trans        &trans
&trans         &trans     &trans     &trans     &trans     &trans      &trans  &trans                                              &trans
            >;
        };
    };
};
